#BlueJ class context
comment0.target=SilkRoad
comment1.params=length
comment1.target=SilkRoad(int)
comment10.params=
comment10.target=void\ reboot()
comment11.params=
comment11.target=java.util.List\ stores()
comment12.params=
comment12.target=java.util.List\ robots()
comment13.params=
comment13.target=void\ makeVisible()
comment14.params=
comment14.target=void\ makeInvisible()
comment15.params=
comment15.target=void\ finish()
comment16.params=
comment16.target=boolean\ ok()
comment17.params=
comment17.target=int\ getCellSize()
comment18.params=route
comment18.target=void\ setCells(java.util.List)
comment19.params=
comment19.target=void\ actualizarMaxProfit()
comment19.text=Calcula\ el\ m\u00E1ximo\ de\ ganancias\ posibles\ basado\ en\ las\ tiendas\ actuales
comment2.params=location\ tenges
comment2.target=void\ placeStore(int,\ int)
comment2.text=Coloca\ una\ tienda\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica
comment3.params=location
comment3.target=void\ placeRobot(int)
comment3.text=Coloca\ un\ robot\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica
comment4.params=location
comment4.target=void\ removeStore(int)
comment4.text=Elimina\ la\ tienda\ en\ la\ ubicaci\u00F3n\ indicada
comment5.params=location
comment5.target=void\ removeRobot(int)
comment5.text=Elimina\ el\ robot\ en\ la\ ubicaci\u00F3n\ indicada
comment6.params=
comment6.target=void\ resupplyStores()
comment6.text=Reabastecer\ todas\ las\ tiendas
comment7.params=
comment7.target=void\ returnRobots()
comment7.text=Retornar\ todos\ los\ robots\ a\ sus\ posiciones\ iniciales
comment8.params=location\ meters
comment8.target=void\ moveRobot(int,\ int)
comment8.text=\r\n\ Mueve\ un\ robot\ a\ lo\ largo\ de\ la\ ruta.\r\n\r\n\ Este\ m\u00E9todo\ realiza\ varias\ validaciones\ y\ acciones\:\r\n\ \r\n\ \ \ Verifica\ que\ la\ ubicaci\u00F3n\ inicial\ est\u00E9\ dentro\ de\ los\ l\u00EDmites.\r\n\ \ \ Busca\ el\ robot\ en\ la\ posici\u00F3n\ especificada\ o\ dentro\ del\ mapa\ de\ robots.\r\n\ \ \ Calcula\ la\ nueva\ posici\u00F3n\ y\ verifica\ que\ no\ salga\ de\ la\ ruta\ ni\ choque\ con\ otro\ robot.\r\n\ \ \ Mueve\ al\ robot,\ actualiza\ la\ celda\ de\ origen\ y\ destino\ y\ la\ visibilidad.\r\n\ \ \ Si\ hay\ una\ tienda\ en\ la\ nueva\ posici\u00F3n\ y\ no\ se\ ha\ vaciado\ hoy,\ calcula\ la\ ganancia\r\n\ \ \ \ \ \ \ restando\ la\ distancia\ recorrida\ al\ recurso\ actual\ de\ la\ tienda,\ actualiza\ las\ ganancias\r\n\ \ \ \ \ \ \ y\ vac\u00EDa\ la\ tienda.\r\n\ \ \ Registra\ el\ orden\ de\ llegada\ del\ robot.\r\n\ \ \ Actualiza\ el\ estado\ de\ la\ operaci\u00F3n\ en\ la\ variable.\r\n\ \r\n\r\n\ @param\ location\ la\ celda\ inicial\ donde\ se\ encuentra\ el\ robot\r\n\ @param\ meters\ cantidad\ de\ celdas\ a\ mover\ (puede\ ser\ negativa\ para\ mover\ hacia\ atr\u00E1s)\r\n
comment9.params=
comment9.target=long\ profit()
numComments=20
